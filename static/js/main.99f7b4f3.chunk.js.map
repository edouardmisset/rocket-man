{"version":3,"sources":["components/particlesOptions.js","components/Modal.js","components/CelestialBody.js","components/Ship.js","components/Player.js","components/Title.js","assets/terre-cartoon.svg","assets/moon-cartoon.svg","assets/galaxy-cartoon.svg","assets/iss-cartoon.svg","assets/jupiter-cartoon.svg","assets/mars-cartoon.svg","assets/saturne-cartoon.svg","assets/soleil-cartoon.svg","assets/etoile-de-la-mort-cartoon.svg","assets/meteor-cartoon.svg","App.js","index.js"],"names":["particlesOptions","particles","number","value","density","enable","value_area","line_linked","distance","opacity","move","direction","speed","size","anim","opacity_min","interactivity","events","onclick","mode","modes","push","particles_nb","retina_detect","Modal","hasRocketLanded","realImage","name","description","gravity","diameter","className","src","alt","CelestialBody","props","ship","celestialBodyInfo","cartoonImage","position","useState","setHasRocketLanded","cBXMin","x","cBXMax","cBYMin","y","cBYMax","useEffect","rocket","document","querySelector","rocketHeight","offsetHeight","rocketWidth","offsetWidth","shipX","shipY","style","left","top","maxHeight","maxWidth","onClick","convertDegToRad","deg","Math","PI","Ship","setShip","angle","moveShip","e","key","cos","sin","transform","window","addEventListener","removeEventListener","Player","title","width","height","frameborder","allowtransparency","allow","bottom","right","Title","track","setTrack","mouseFollow","clientX","clientY","mouseX","mouseY","console","log","body","backgroundPosition","App","celestialBodyInfoList","setCelestialBodyInfoList","earth","earthCartoon","mars","marsCartoon","moon","moonCartoon","deathStar","deathStarCartoon","sun","sunCartoon","iss","issCartoon","galaxy","galaxyCartoon","Infinity","jupiter","jupiterCartoon","saturn","saturnCartoon","meteorite","meteoriteCartoon","axios","get","then","bodies","data","filter","planetName","englishName","includes","meanRadius","params","Object","values","map","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.99f7b4f3.chunk.js","sourcesContent":["const particlesOptions = {\n  particles: {\n    number: {\n      value: 400,\n      density: {\n        enable: true,\n        value_area: 3500,\n      },\n    },\n    line_linked: {\n      enable: true,\n      distance: 100,\n      opacity: 0.1,\n    },\n    move: {\n      direction: 'right',\n      speed: 0.2,\n    },\n    size: {\n      value: 1,\n    },\n    opacity: {\n      anim: {\n        enable: true,\n        speed: 1,\n        opacity_min: 0.05,\n      },\n    },\n  },\n  interactivity: {\n    events: {\n      onclick: {\n        enable: true,\n        mode: 'push',\n      },\n    },\n    modes: {\n      push: {\n        particles_nb: 1,\n      },\n    },\n  },\n  retina_detect: true,\n};\n\nexport default particlesOptions;\n","import \"./Modal.css\";\n\nconst Modal = ({\n  hasRocketLanded,\n  realImage,\n  name,\n  description,\n  density,\n  gravity,\n  diameter,\n}) =>\n  hasRocketLanded ? (\n    <div className=\"modale\">\n      <h2>{name}</h2>\n      <img src={realImage} alt=\"realImage\" />\n      <h3>Description:</h3>\n      <p>{description}</p>\n      <p>Density : {density} g/cm3</p>\n      <p>Gravity : {gravity} m/s2 </p>\n      <p>Diameter : {diameter} km </p>\n    </div>\n  ) : null;\n\nexport default Modal;\n","import { useEffect, useState } from 'react';\nimport Modal from './Modal';\n\nexport default function CelestialBody(props) {\n  const {\n    ship,\n    celestialBodyInfo: {\n      cartoonImage,\n      realImage,\n      name,\n      description,\n      position,\n      size,\n      density,\n      diameter,\n      gravity,\n    },\n  } = props;\n  const [hasRocketLanded, setHasRocketLanded] = useState(false);\n\n  const cBXMin = position.x;\n  const cBXMax = position.x + size;\n  const cBYMin = position.y;\n  const cBYMax = position.y + size;\n\n  useEffect(() => {\n    const rocket = document.querySelector('.rocket');\n    const rocketHeight = rocket.offsetHeight;\n    const rocketWidth = rocket.offsetWidth;\n    const shipX = ship.position.x + rocketWidth / 2;\n    const shipY = ship.position.y + rocketHeight / 2;\n    setHasRocketLanded(\n      cBXMin <= shipX && shipX <= cBXMax && cBYMin <= shipY && shipY <= cBYMax\n    );\n  }, [\n    cBXMax,\n    cBXMin,\n    cBYMax,\n    cBYMin,\n    position.x,\n    position.y,\n    ship.position.x,\n    ship.position.y,\n    size,\n  ]);\n\n  if (!position) return 'Coming...';\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n      }}\n    >\n      <img\n        src={cartoonImage}\n        alt={name}\n        style={{ maxHeight: `${size}px`, maxWidth: `${size}px` }}\n        onClick={() => {\n          setHasRocketLanded(!hasRocketLanded);\n        }}\n      />\n      <Modal\n        hasRocketLanded={hasRocketLanded}\n        description={description}\n        name={name}\n        realImage={realImage}\n        density={density}\n        diameter={diameter}\n        gravity={gravity}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport './Ship.css';\n\nfunction convertDegToRad(deg) {\n  return (Math.PI * deg) / 180;\n}\n// Speed factor\nconst speed = 10;\n\nfunction Ship({ ship, setShip }) {\n  const { angle, position } = ship;\n  const { x, y } = position;\n\n  function moveShip(e) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        setShip(ship => ({ ...ship, angle: ship.angle - 1 }));\n        break;\n      case 'ArrowRight':\n        setShip(ship => ({ ...ship, angle: ship.angle + 1 }));\n        break;\n      case 'ArrowUp':\n        // redefinir position\n        setShip(ship => ({\n          ...ship,\n          position: {\n            x:\n              ship.position.x +\n              speed * Math.cos(speed * convertDegToRad(ship.angle)),\n            y:\n              ship.position.y +\n              speed * Math.sin(speed * convertDegToRad(ship.angle)),\n          },\n        }));\n        break;\n      default:\n    }\n  }\n\n  useEffect(() => {\n    const rocket = document.querySelector('.rocket');\n    rocket.style.transform = `rotate(${90 + speed * angle}deg)`;\n    rocket.style.top = `${y}px`;\n    rocket.style.left = `${x}px`;\n  }, [angle, x, y]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', moveShip);\n    return () => {\n      window.removeEventListener('keydown', moveShip);\n    };\n  }, []);\n\n  return (\n    <div>\n      <img\n        className='rocket'\n        src='https://media.discordapp.net/attachments/841585178626490379/841648727763976212/x-wing.png?width=529&height=617'\n        alt='StarWars'\n      />\n    </div>\n  );\n}\nexport default Ship;\n","export default function Player() {\n  return (\n    <iframe\n      title='Rocket Man'\n      src='https://open.spotify.com/embed/playlist/7LMrY9PEPgFkNCaLVs6Lbo'\n      width='300'\n      height='80'\n      frameborder='0'\n      allowtransparency='true'\n      allow='encrypted-media'\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n      }}\n    ></iframe>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport './Title.css';\n\nexport default function Title() {\n  const [track, setTrack] = useState({ x: 0, y: 0 });\n\n  function mouseFollow(e) {\n    const [mouseX, mouseY] = [e.clientX, e.clientY];\n    console.log(`${mouseX}, ${mouseY}`);\n    setTrack(x => ({ ...track, x: (4 * mouseX) / 570 + 40 }));\n    setTrack(y => ({ ...track, y: (4 * mouseY) / 570 + 50 }));\n  }\n\n  useEffect(() => {\n    document.body.addEventListener('mousemove', mouseFollow);\n    return () => {\n      document.body.removeEventListener('mousemove', mouseFollow);\n    };\n  }, []);\n\n  return (\n    <div className='container'>\n      <div\n        className='title'\n        style={{ backgroundPosition: `${track.x}% ${track.y}%` }}\n      >\n        Rocket Man\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/terre-cartoon.856e9ae8.svg\";","export default __webpack_public_path__ + \"static/media/moon-cartoon.1c3b38db.svg\";","export default __webpack_public_path__ + \"static/media/galaxy-cartoon.d4d8765e.svg\";","export default __webpack_public_path__ + \"static/media/iss-cartoon.ecbe7216.svg\";","export default __webpack_public_path__ + \"static/media/jupiter-cartoon.4df8b9c7.svg\";","export default __webpack_public_path__ + \"static/media/mars-cartoon.a800f169.svg\";","export default __webpack_public_path__ + \"static/media/saturne-cartoon.f5efd9b6.svg\";","export default __webpack_public_path__ + \"static/media/soleil-cartoon.5cbfd54b.svg\";","export default __webpack_public_path__ + \"static/media/etoile-de-la-mort-cartoon.053a96eb.svg\";","export default __webpack_public_path__ + \"static/media/meteor-cartoon.07548abc.svg\";","import './App.css';\nimport Particles from 'react-particles-js';\nimport particlesOptions from './components/particlesOptions';\nimport { useEffect, useState } from 'react';\nimport CelestialBody from './components/CelestialBody';\nimport Ship from './components/Ship';\nimport axios from 'axios';\nimport Player from './components/Player';\nimport Title from './components/Title';\n\n// Import assests\nimport earthCartoon from './assets/terre-cartoon.svg';\nimport moonCartoon from './assets/moon-cartoon.svg';\nimport galaxyCartoon from './assets/galaxy-cartoon.svg';\nimport issCartoon from './assets/iss-cartoon.svg';\nimport jupiterCartoon from './assets/jupiter-cartoon.svg';\nimport marsCartoon from './assets/mars-cartoon.svg';\nimport saturnCartoon from './assets/saturne-cartoon.svg';\nimport sunCartoon from './assets/soleil-cartoon.svg';\nimport deathStarCartoon from './assets/etoile-de-la-mort-cartoon.svg';\nimport meteoriteCartoon from './assets/meteor-cartoon.svg';\n\nexport default function App() {\n  const [ship, setShip] = useState({\n    position: {\n      x: 250,\n      y: 300,\n    },\n    angle: 0,\n  });\n\n  // All the informations of the list of the celestial bodies will be stored in an array of objects : celestialBodyInfoList\n  // We need the following informations / keys : cartoonImage, realImage, name, description, position, size\n  // position is an object containing x and y\n  const [celestialBodyInfoList, setCelestialBodyInfoList] = useState(null);\n  useEffect(() => {\n    setCelestialBodyInfoList({\n      earth: {\n        name: 'Earth',\n        description:\n          \"Earth is the third planet from the Sun and the only astronomical object known to harbor life. About 29.2% of Earth's surface is land consisting of continents and islands. The remaining 70.8% is covered with water, mostly by oceans, seas and other salt-water bodies, but also by fresh-water bodies, which together constitute the hydrosphere. Earth's atmosphere consists mostly of nitrogen and oxygen.\",\n        cartoonImage: earthCartoon,\n        realImage:\n          'https://upload.wikimedia.org/wikipedia/commons/d/d9/Earth_by_the_EPIC_Team_on_21_April_2018.png',\n        position: {\n          x: 100,\n          y: 220,\n        },\n        size: 130,\n\n        density: 0,\n        diameter: 0,\n        gravity: 0,\n      },\n      mars: {\n        name: 'Mars',\n        description:\n          'Mars is the fourth planet in increasing order of distance from the Sun and the second in increasing order of size and mass.',\n        cartoonImage: marsCartoon,\n        realImage:\n          'https://www.vaisala.com/sites/default/files/styles/16_9_liftup_extra_large/public/images/LIFT-Mars%20the%20Red%20Planet-1600x900.jpg?itok=YXq-Cv1K',\n        position: {\n          x: 190,\n          y: 682,\n        },\n        size: 130,\n        density: 0,\n        diameter: 0,\n        gravity: 0,\n      },\n      moon: {\n        name: 'Moon',\n        description:\n          \"The Moon is Earth's only natural satellite. At about one-quarter the diameter of Earth (comparable to the width of Australia),[13] it is the largest natural satellite in the Solar System relative to the size of its planet,[f] and the fifth largest satellite in the Solar System overall (larger than any dwarf planet).\",\n        cartoonImage: moonCartoon,\n        realImage:\n          'https://upload.wikimedia.org/wikipedia/commons/1/10/Supermoon_Nov-14-2016-minneapolis.jpg',\n        position: {\n          x: 250,\n          y: 100,\n        },\n        size: 60,\n        density: 0,\n        diameter: 0,\n        gravity: 0,\n      },\n      deathStar: {\n        name: 'Death Star',\n        description:\n          'The Death Stars are two spherically shaped, small moon-sized movable sidereal space stations featured in the Star Wars saga.',\n        cartoonImage: deathStarCartoon,\n        realImage: 'https://i.imgur.com/9yeqp7s.png',\n        position: {\n          x: 1200,\n          y: 470,\n        },\n        size: 120,\n        density: 'null',\n        diameter: 160,\n        gravity: 'null',\n      },\n      sun: {\n        name: 'Sun',\n        description:\n          'The Sun is the star of the Solar System. In the astronomical classification, it is a yellow dwarf-type star with a mass of approximately 1.989 1 × 1030 kg, composed of hydrogen (75% of the mass or 92% of the volume) and helium (25% by mass or 8% by volume) 10.',\n        cartoonImage: sunCartoon,\n        realImage:\n          'https://images-assets.nasa.gov/image/GSFC_20171208_Archive_e000790/GSFC_20171208_Archive_e000790~small.jpg',\n        position: {\n          x: 700,\n          y: 200,\n        },\n        size: 380,\n        density: 0,\n        diameter: 0,\n        gravity: 0,\n      },\n      iss: {\n        name: 'ISS',\n        description:\n          'The International Space Station, or ISS, is a space station placed in low Earth orbit, permanently manned by an international crew dedicated to scientific research in the space environment. ',\n        cartoonImage: issCartoon,\n        realImage:\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/ISS-56_International_Space_Station_fly-around_%2805%29.jpg/1920px-ISS-56_International_Space_Station_fly-around_%2805%29.jpg',\n        position: {\n          x: 50,\n          y: 150,\n        },\n        size: 60,\n        density: 1,\n        diameter: 1,\n        gravity: 0,\n      },\n      galaxy: {\n        name: 'Galaxy',\n        description:\n          'A galaxy is an assemblage of stars, gas, dust, void, and perhaps mostly dark matter, sometimes containing a supermassive black hole at its center. ',\n        cartoonImage: galaxyCartoon,\n        realImage:\n          'https://images-assets.nasa.gov/image/PIA07828/PIA07828~small.jpg',\n        position: {\n          x: 650,\n          y: 550,\n        },\n        size: 100,\n        density: 0.1,\n        diameter: Infinity,\n        gravity: 0,\n      },\n      jupiter: {\n        name: 'Jupiter',\n        description:\n          'Jupiter is a giant gas planet. It is the largest planet in the Solar System, larger and more massive than all the other planets combined, and the fifth planet by its distance from the Sun. ',\n        cartoonImage: jupiterCartoon,\n        realImage:\n          'https://www.nasa.gov/sites/default/files/styles/full_width/public/thumbnails/image/jupapr3color-jd-170304.png?itok=H3AGeVPH',\n        position: {\n          x: 1460,\n          y: 645,\n        },\n        size: 220,\n        density: 0,\n        diameter: 0,\n        gravity: 0,\n      },\n      saturn: {\n        name: 'Saturn',\n        description:\n          'Saturn is the sixth planet in the Solar System in order of distance from the Sun, and the second largest in size and mass after Jupiter, which is like it a giant gas planet. ',\n        cartoonImage: saturnCartoon,\n        realImage:\n          'https://images-assets.nasa.gov/image/PIA11141/PIA11141~small.jpg',\n        position: {\n          x: 1330,\n          y: 62,\n        },\n        size: 300,\n        density: 0,\n        diameter: 0,\n        gravity: 0,\n      },\n      meteorite: {\n        name: 'Meteorite',\n        description:\n          'A meteorite is a solid piece of debris from an object, such as a comet, asteroid, or meteoroid, that originates in outer space and survives its passage through the atmosphere to reach the surface of a planet or moon.',\n        cartoonImage: meteoriteCartoon,\n        realImage:\n          'https://france3-regions.francetvinfo.fr/image/1QKKfcbwGUzhDoEYBcay5vf4oBU/930x620//filters:format(webp)/regions/2021/04/25/608524ec03987_photo_meteorite-5287824.jpeg',\n        position: {\n          x: 1200,\n          y: 350,\n        },\n        size: 80,\n        density: 10,\n        diameter: 0.01,\n        gravity: 0,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    axios\n      .get('https://api.le-systeme-solaire.net/rest/bodies/')\n      .then(({ data }) => {\n        const bodies = data.bodies;\n\n        // Grab the planet object\n        const [moon] = bodies.filter(planetName =>\n          planetName.englishName.includes('Moon')\n        );\n        // Set CB info with the rest ...cBinfoList, planet : {...celestialBodyInfoList.planet}\n        setCelestialBodyInfoList(celestialBodyInfoList => ({\n          ...celestialBodyInfoList,\n          moon: {\n            ...celestialBodyInfoList.moon,\n            density: moon.density,\n            gravity: moon.gravity,\n            diameter: 2 * moon.meanRadius,\n          },\n        }));\n\n        const [mars] = bodies.filter(planetName =>\n          planetName.englishName.includes('Mars')\n        );\n        // Set CB info with the rest ...cBinfoList, planet : {...celestialBodyInfoList.planet}\n        setCelestialBodyInfoList(celestialBodyInfoList => ({\n          ...celestialBodyInfoList,\n          mars: {\n            ...celestialBodyInfoList.mars,\n            density: mars.density,\n            gravity: mars.gravity,\n            diameter: 2 * mars.meanRadius,\n          },\n        }));\n\n        const [earth] = bodies.filter(planetName =>\n          planetName.englishName.includes('Earth')\n        );\n        // Set CB info with the rest ...cBinfoList, planet : {...celestialBodyInfoList.planet}\n        setCelestialBodyInfoList(celestialBodyInfoList => ({\n          ...celestialBodyInfoList,\n          earth: {\n            ...celestialBodyInfoList.earth,\n            density: earth.density,\n            gravity: earth.gravity,\n            diameter: 2 * earth.meanRadius,\n          },\n        }));\n\n        const [jupiter] = bodies.filter(planetName =>\n          planetName.englishName.includes('Jupiter')\n        );\n        // Set CB info with the rest ...cBinfoList, planet : {...celestialBodyInfoList.planet}\n        setCelestialBodyInfoList(celestialBodyInfoList => ({\n          ...celestialBodyInfoList,\n          jupiter: {\n            ...celestialBodyInfoList.jupiter,\n            density: jupiter.density,\n            gravity: jupiter.gravity,\n            diameter: 2 * jupiter.meanRadius,\n          },\n        }));\n\n        const [sun] = bodies.filter(planetName =>\n          planetName.englishName.includes('Sun')\n        );\n        // Set CB info with the rest ...cBinfoList, planet : {...celestialBodyInfoList.planet}\n        setCelestialBodyInfoList(celestialBodyInfoList => ({\n          ...celestialBodyInfoList,\n          sun: {\n            ...celestialBodyInfoList.sun,\n            density: sun.density,\n            gravity: sun.gravity,\n            diameter: 2 * sun.meanRadius,\n          },\n        }));\n\n        const [saturn] = bodies.filter(planetName =>\n          planetName.englishName.includes('Saturn')\n        );\n        // Set CB info with the rest ...cBinfoList, planet : {...celestialBodyInfoList.planet}\n        setCelestialBodyInfoList(celestialBodyInfoList => ({\n          ...celestialBodyInfoList,\n          saturn: {\n            ...celestialBodyInfoList.saturn,\n            density: saturn.density,\n            gravity: saturn.gravity,\n            diameter: 2 * saturn.meanRadius,\n          },\n        }));\n      });\n  }, []);\n\n  return (\n    <div className='App'>\n      <Particles params={particlesOptions} className='particles' />\n      <Title />\n      {/* Change the object into an array to be able to map on it */}\n      {celestialBodyInfoList &&\n        Object.values(celestialBodyInfoList).map(celestialBodyInfo => (\n          <CelestialBody\n            key={celestialBodyInfo.name}\n            realImage={celestialBodyInfo.realImage}\n            ship={ship}\n            celestialBodyInfo={celestialBodyInfo}\n          />\n        ))}\n      <Ship ship={ship} setShip={setShip} />\n      <Player />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}